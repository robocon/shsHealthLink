/* 
ใช้ใน 
medication_statement
*/
DROP TABLE IF EXISTS `tmp_drugrx` ;
CREATE TABLE IF NOT EXISTS `tmp_drugrx`(
    `row_id` int(11),
    `drugcode` VARCHAR(100) NOT NULL,
    `hn` VARCHAR(100) NOT NULL,
    `an` VARCHAR(100) NULL,
    `date` VARCHAR(100) NOT NULL,
    `amount` VARCHAR(100) NULL,
    `strength` VARCHAR(100) NOT NULL,
    `unit` VARCHAR(100) NOT NULL,
    `genname` VARCHAR(100) NOT NULL,
    `tmt` VARCHAR(100) NOT NULL,
    `thdatehn` VARCHAR(100) NOT NULL,
    KEY `an` (`an`),
    KEY `thdatehn` (`thdatehn`)
);

INSERT INTO `tmp_drugrx` 
SELECT a.`row_id`,a.`drugcode`,a.`hn`,a.`an`,strDatetimeToEn(a.`date`) AS `date`,a.`amount`,b.`strength`,b.`unit`,b.`genname`,TRIM(b.`tmt`) AS `tmt`,
CONCAT(SUBSTRING(a.`date`,9,2),'-',SUBSTRING(a.`date`,6,2),'-',(SUBSTRING(a.`date`,1,4)),a.`hn`) AS `thdatehn`
FROM `drugrx` AS a
LEFT JOIN `druglst` AS b ON a.`drugcode` = b.`drugcode`
WHERE ( a.`amount` > 0 AND a.`reject` != 'Y' )
AND a.`drugcode` != 'OLD'
AND a.`hn` <> '' 
AND ( b.`genname` <> '' AND b.`tmt` <> '' )
ORDER BY b.`genname`;


/* 
ใช้ใน 
condition
*/
DROP TABLE IF EXISTS `tmp_diag` ;
CREATE TABLE IF NOT EXISTS `tmp_diag`(
    `row_id` int(11),
    `vn` VARCHAR(100) NOT NULL,
    `an` VARCHAR(100) NULL,
    `icd10` VARCHAR(100) NOT NULL,
    `type` VARCHAR(100) NULL,
    `diag` VARCHAR(100) NOT NULL,
    `regisdate` VARCHAR(100) NOT NULL,
    `svdate` VARCHAR(100) NOT NULL,
    `thdatevn` VARCHAR(100) NOT NULL,
    `thdatehn` VARCHAR(100) NOT NULL,
    KEY `an` (`an`),
    KEY `thdatevn` (`thdatevn`),
    KEY `thdatehn` (`thdatehn`)
);

INSERT INTO `tmp_diag` 
SELECT `row_id`,(
    CASE WHEN LOCATE('/', `an`)=0 THEN `an`
    ELSE ''
    END
) AS `vn`,(
    CASE WHEN LOCATE('/', `an`)>0 THEN `an`
    ELSE ''
    END
) AS `an`,
`icd10`,`type`,`diag`,`regisdate`,(
    CASE WHEN `svdate` = '' THEN `regisdate`
    ELSE `svdate`
    END
) AS `svdate`,(
    CASE WHEN `svdate` = '' THEN CONCAT(SUBSTRING(`regisdate`,9,2),'-',SUBSTRING(`regisdate`,6,2),'-',(SUBSTRING(`regisdate`,1,4)),`an`)
    ELSE CONCAT(SUBSTRING(`svdate`,9,2),'-',SUBSTRING(`svdate`,6,2),'-',(SUBSTRING(`svdate`,1,4)),`an`)
    END
) AS `thdatevn`,
CONCAT(SUBSTRING(`regisdate`,9,2),'-',SUBSTRING(`regisdate`,6,2),'-',(SUBSTRING(`regisdate`,1,4)),`hn`) AS `thdatehn`
FROM `diag` 
WHERE ( TRIM(`icd10`) <> '' AND TRIM(`diag`) <> '' ) 
ORDER BY `row_id` ASC;

/* 
ใช้ใน 
condition
medication_statement
*/
DROP TABLE IF EXISTS `tmp_opday` ;
CREATE TABLE IF NOT EXISTS `tmp_opday`(
    `row_id` INT(11) NOT NULL,
    `thidate` VARCHAR(100) NULL,
    `an` VARCHAR(100) NULL,
    `thdatehn` VARCHAR(100) NOT NULL,
    `thdatevn` VARCHAR(100) NOT NULL,
    `idcard` VARCHAR(100) NOT NULL,
    `icd10` VARCHAR(100) NOT NULL,
    `diag` VARCHAR(255) NOT NULL,
    `toborow` VARCHAR(100) NOT NULL,
    `dcdate` VARCHAR(100) NOT NULL,
    KEY `an` (`an`),
    KEY `thdatehn` (`thdatehn`),
    KEY `thdatevn` (`thdatevn`)
);
INSERT INTO `tmp_opday`
SELECT a.`row_id`,TRIM(a.`thidate`) AS `thidate`,TRIM(a.`an`) AS `an`,a.`thdatehn`,a.`thdatevn`,TRIM(a.`idcard`) AS `idcard`,TRIM(a.`icd10`) AS `icd10`,TRIM(a.`diag`) AS `diag`,SUBSTRING(TRIM(a.`toborow`),1,4) AS `toborow`,
TRIM(a.`thidate`) AS `dcdate`
FROM `opday` AS a 
WHERE (TRIM(a.`idcard`) != '-' AND TRIM(a.`idcard`) <> '') 
AND ( a.`an` IS NULL OR a.`an` = '' )
#AND ( a.`icd10` IS NOT NULL AND a.`icd10` <> '' )
ORDER BY a.`row_id` ASC;

INSERT INTO `tmp_opday`
SELECT m.`row_id`, m.`thidate`, m.`an`, m.`thdatehn`, m.`thdatevn`, m.`idcard`, m.`icd10`, m.`toborow`, m.`diag`,m.`dcdate` FROM (
	SELECT y.`row_id`,TRIM(y.`thidate`) AS `thidate`,TRIM(y.`an`) AS `an`,y.`thdatehn`,y.`thdatevn`,TRIM(y.`idcard`) AS `idcard`,TRIM(y.`icd10`) AS `icd10`,TRIM(y.`diag`) AS `diag`,SUBSTRING(TRIM(y.`toborow`),1,4) AS `toborow`, 
	(SELECT x.`dcdate` FROM `ipcard` AS x WHERE x.`an` = y.`an` AND x.`dcdate` != '0000-00-00 00:00:00' ) AS `dcdate`
	FROM `opday` AS y 
	WHERE (TRIM(y.`idcard`) != '-' AND TRIM(y.`idcard`) <> '') 
	AND ( y.`an` <> '' )
	#AND ( y.`icd10` IS NOT NULL AND y.`icd10` <> '' )
	ORDER BY y.`row_id` ASC
) AS m WHERE m.`dcdate` IS NOT NULL
ORDER BY m.`row_id` ASC;


// กำลังคิดอยู่ว่าจะแยก ipcard ออกมาเป็น temp แล้วเอา hn + bedcode จากใน orderhead ไปหาใน ipcard เพื่อเอา date ไป join กับใน tmp_opday หา encounter_id อีกที
DROP TABLE IF EXISTS `tmp_orderhead`;
CREATE TABLE IF NOT EXISTS `tmp_orderhead`(
	`autonumber` INT(11) PRIMARY KEY,
	`orderdate` VARCHAR(100) NOT NULL,
	`labnumber` VARCHAR(100) NOT NULL,
	`hn` VARCHAR(100) NOT NULL,
	`patienttype` VARCHAR(100) NOT NULL,
	`thdatehn` VARCHAR(100) NOT NULL,
    `an` VARCHAR(100) NOT NULL,
	KEY `labnumber` (`labnumber`),
	KEY `thdatehn` (`thdatehn`)
);
INSERT INTO `tmp_orderhead` 
SELECT a.`autonumber`,a.`labnumber`,a.`orderdate`,a.`hn`,a.`patienttype`,
CONCAT(SUBSTRING(a.`orderdate`,9,2),'-',SUBSTRING(a.`orderdate`,6,2),'-',(SUBSTRING(a.`orderdate`,1,4)+543),a.`hn`) AS `thdatehn`,
( SELECT b.`an` FROM `ipcard` AS b WHERE b.`hn` = a.`hn` AND b.`bedcode` = a.`bedcode` ) AS `an`
FROM `orderhead` AS a 
WHERE a.`hn` <> '' 
ORDER BY a.`autonumber` ASC;



DROP TABLE IF EXISTS `tmp_resulthead`;
CREATE TABLE IF NOT EXISTS `tmp_resulthead`(
	`autonumber` INT(11) PRIMARY KEY,
	`labnumber` VARCHAR(100) NOT NULL,
	`orderdate` VARCHAR(100) NOT NULL,
	`profilecode` VARCHAR(100) NOT NULL,
	`testgroupname` VARCHAR(100) NOT NULL,
	`thdatehn` VARCHAR(100) NOT NULL,
	KEY `labnumber` (`labnumber`),
	KEY `thdatehn` (`thdatehn`)
);
INSERT INTO `tmp_resulthead` 
SELECT `autonumber`,`labnumber`,`orderdate`,`profilecode`,`testgroupname`,
CONCAT(SUBSTRING(`orderdate`,9,2),'-',SUBSTRING(`orderdate`,6,2),'-',(SUBSTRING(`orderdate`,1,4)+543),`hn`) AS `thdatehn`
FROM `resulthead`;

/*
tmtlab มันเอามา join ไม่ได้เพราะมีปัญหาเรื่อง collection เลยต้องสร้างเป็น temp 
*/
DROP TABLE IF EXISTS `tmp_tmtlab` ;
CREATE TABLE IF NOT EXISTS `tmp_tmtlab`(
	`LCCode` VARCHAR(100) NOT NULL,
	`TMLT` VARCHAR(100) NOT NULL,
	KEY `LCCode` (`LCCode`)
);
INSERT INTO `tmp_tmtlab` 
SELECT TRIM(`LCCode`) AS `LCCode`,TRIM(`TMLT`) AS `TMLT` FROM `tmtlab`;

/*
สร้าง labcare ขึ้นมาใหม่ โดยรวมเอา tmtlab เข้ามาเป็น table เดียวกัน
*/
DROP TABLE `tmp_labcare`;
CREATE TABLE IF NOT EXISTS `tmp_labcare`(
	`code` VARCHAR(100) NOT NULL,
	`detail` VARCHAR(255) NOT NULL,
	`codelab` VARCHAR(100) NOT NULL,
	`codex` VARCHAR(100) NOT NULL,
	`labpart` VARCHAR(100) NOT NULL,
	`TMLT` VARCHAR(100) NOT NULL,
	KEY `codelab` (`codelab`)
);
INSERT INTO `tmp_labcare` 
SELECT TRIM(x.`code`) AS `code`,x.`detail`,x.`codelab`,x.`codex`,x.`labpart`,y.`TMLT` FROM (
	SELECT `code`,`detail`,`codelab`,`codex`,`labpart`
	FROM `labcare` 
	WHERE `codelab` != '' 
) AS x 
LEFT JOIN `tmp_tmtlab` AS y ON x.`codex` = y.`LCCode`
GROUP BY x.`codelab`;