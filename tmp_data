/* 
ใช้ใน 
medication_statement
*/
DROP TABLE IF EXISTS `tmp_drugrx` ;
CREATE TABLE IF NOT EXISTS `tmp_drugrx`(
    `row_id` int(11),
    `drugcode` VARCHAR(100) NOT NULL,
    `hn` VARCHAR(100) NOT NULL,
    `an` VARCHAR(100) NULL,
    `date` VARCHAR(100) NOT NULL,
    `amount` VARCHAR(100) NULL,
    `strength` VARCHAR(100) NOT NULL,
    `unit` VARCHAR(100) NOT NULL,
    `genname` VARCHAR(100) NOT NULL,
    `tmt` VARCHAR(100) NOT NULL,
    `thdatehn` VARCHAR(100) NOT NULL,
    KEY `an` (`an`),
    KEY `thdatehn` (`thdatehn`)
);

INSERT INTO `tmp_drugrx` 
SELECT a.`row_id`,a.`drugcode`,a.`hn`,a.`an`,strDatetimeToEn(a.`date`) AS `date`,a.`amount`,b.`strength`,b.`unit`,b.`genname`,TRIM(b.`tmt`) AS `tmt`,
CONCAT(SUBSTRING(a.`date`,9,2),'-',SUBSTRING(a.`date`,6,2),'-',(SUBSTRING(a.`date`,1,4)),a.`hn`) AS `thdatehn`
FROM `drugrx` AS a
LEFT JOIN `druglst` AS b ON a.`drugcode` = b.`drugcode`
WHERE ( a.`amount` > 0 AND a.`reject` != 'Y' )
AND a.`drugcode` != 'OLD'
AND a.`hn` <> '' 
AND ( b.`genname` <> '' AND b.`tmt` <> '' )
ORDER BY b.`genname`;


/* 
ใช้ใน 
condition
*/
DROP TABLE IF EXISTS `tmp_diag` ;
CREATE TABLE IF NOT EXISTS `tmp_diag`(
    `row_id` int(11),
    `vn` VARCHAR(100) NOT NULL,
    `an` VARCHAR(100) NULL,
    `icd10` VARCHAR(100) NOT NULL,
    `type` VARCHAR(100) NULL,
    `diag` VARCHAR(100) NOT NULL,
    `regisdate` VARCHAR(100) NOT NULL,
    `svdate` VARCHAR(100) NOT NULL,
    `thdatevn` VARCHAR(100) NOT NULL,
    `thdatehn` VARCHAR(100) NOT NULL,
    KEY `an` (`an`),
    KEY `thdatevn` (`thdatevn`),
    KEY `thdatehn` (`thdatehn`)
);

INSERT INTO `tmp_diag` 
SELECT `row_id`,(
    CASE WHEN LOCATE('/', `an`)=0 THEN `an`
    ELSE ''
    END
) AS `vn`,(
    CASE WHEN LOCATE('/', `an`)>0 THEN `an`
    ELSE ''
    END
) AS `an`,
`icd10`,`type`,`diag`,`regisdate`,(
    CASE WHEN `svdate` = '' THEN `regisdate`
    ELSE `svdate`
    END
) AS `svdate`,(
    CASE WHEN `svdate` = '' THEN CONCAT(SUBSTRING(`regisdate`,9,2),'-',SUBSTRING(`regisdate`,6,2),'-',(SUBSTRING(`regisdate`,1,4)),`an`)
    ELSE CONCAT(SUBSTRING(`svdate`,9,2),'-',SUBSTRING(`svdate`,6,2),'-',(SUBSTRING(`svdate`,1,4)),`an`)
    END
) AS `thdatevn`,
CONCAT(SUBSTRING(`regisdate`,9,2),'-',SUBSTRING(`regisdate`,6,2),'-',(SUBSTRING(`regisdate`,1,4)),`hn`) AS `thdatehn`
FROM `diag` 
WHERE ( TRIM(`icd10`) <> '' AND TRIM(`diag`) <> '' ) 
ORDER BY `row_id` ASC;

/* 
ใช้ใน 
condition
medication_statement
diagnostic_report
*/
DROP TABLE IF EXISTS `tmp_opday` ;
CREATE TABLE IF NOT EXISTS `tmp_opday`(
    `row_id` INT(11) NOT NULL,
    `thidate` VARCHAR(100) NULL,
    `an` VARCHAR(100) NULL,
    `thdatehn` VARCHAR(100) NOT NULL,
    `thdatevn` VARCHAR(100) NOT NULL,
    `idcard` VARCHAR(100) NOT NULL,
    `icd10` VARCHAR(100) NOT NULL,
    `diag` VARCHAR(255) NOT NULL,
    `toborow` VARCHAR(100) NOT NULL,
    `dcdate` VARCHAR(100) NOT NULL,
    KEY `an` (`an`),
    KEY `thdatehn` (`thdatehn`),
    KEY `thdatevn` (`thdatevn`)
);
INSERT INTO `tmp_opday`
SELECT a.`row_id`,TRIM(a.`thidate`) AS `thidate`,TRIM(a.`an`) AS `an`,a.`thdatehn`,a.`thdatevn`,TRIM(a.`idcard`) AS `idcard`,TRIM(a.`icd10`) AS `icd10`,TRIM(a.`diag`) AS `diag`,SUBSTRING(TRIM(a.`toborow`),1,4) AS `toborow`,
TRIM(a.`thidate`) AS `dcdate`
FROM `opday` AS a 
WHERE (TRIM(a.`idcard`) != '-' AND TRIM(a.`idcard`) <> '') 
AND ( a.`an` IS NULL OR a.`an` = '' )
ORDER BY a.`row_id` ASC;

INSERT INTO `tmp_opday`
SELECT m.`row_id`, TRIM(m.`thidate`), TRIM(m.`an`), m.`thdatehn`, m.`thdatevn`, TRIM(m.`idcard`), TRIM(m.`icd10`), TRIM(m.`diag`),m.`toborow`, m.`dcdate` 
FROM (
	SELECT y.`row_id`,TRIM(y.`thidate`) AS `thidate`,TRIM(y.`an`) AS `an`,y.`thdatehn`,y.`thdatevn`,TRIM(y.`idcard`) AS `idcard`,TRIM(y.`icd10`) AS `icd10`,TRIM(y.`diag`) AS `diag`,SUBSTRING(TRIM(y.`toborow`),1,4) AS `toborow`, 
	( SELECT x.`dcdate` FROM `ipcard` AS x WHERE x.`an` = y.`an` AND x.`dcdate` != '0000-00-00 00:00:00' ) AS `dcdate`
	FROM `opday` AS y 
	WHERE (TRIM(y.`idcard`) != '-' AND TRIM(y.`idcard`) <> '') 
	AND ( y.`an` <> '' )
	ORDER BY y.`row_id` ASC
) AS m WHERE m.`dcdate` IS NOT NULL
ORDER BY m.`row_id` ASC;


DROP TABLE IF EXISTS `tmp_ipcard`;
CREATE TABLE IF NOT EXISTS `tmp_ipcard`(
	`row_id` INT(11) PRIMARY KEY,
	`date` VARCHAR(100) NOT NULL,
	`an` VARCHAR(100) NOT NULL,
	`hn` VARCHAR(100) NOT NULL,
	`ptname` VARCHAR(100) NOT NULL,
	`bedcode` VARCHAR(100) NOT NULL,
    `dcdate` VARCHAR(100) NOT NULL,
	KEY `an` (`an`),
	KEY `hn` (`hn`)
) COLLATE=`utf8_unicode_ci` ;
INSERT INTO `tmp_ipcard`
SELECT `row_id`,`date`,`an`,`hn`,`ptname`,`bedcode`,`dcdate` FROM `ipcard` WHERE `ptname` <> '' AND `bedcode` <> '' AND `dcdate` <> ''  ORDER BY `row_id` asc;



/*
tmtlab มันเอามา join ไม่ได้เพราะมีปัญหาเรื่อง collection เลยต้องสร้างเป็น temp 
*/
DROP TABLE IF EXISTS `tmp_tmtlab` ;
CREATE TABLE IF NOT EXISTS `tmp_tmtlab`(
	`LCCode` VARCHAR(100) NOT NULL,
	`TMLT` VARCHAR(100) NOT NULL,
	KEY `LCCode` (`LCCode`)
);
INSERT INTO `tmp_tmtlab` 
SELECT TRIM(`LCCode`) AS `LCCode`,TRIM(`TMLT`) AS `TMLT` FROM `tmtlab`;

/*
สร้าง labcare ขึ้นมาใหม่ โดยรวมเอา tmtlab เข้ามาเป็น table เดียวกัน
diagnostic_report


!!!! เอา map_labcare มารวมไว้ในนี้เลย ตอนเอาไปใช้งานใน orderhead จะได้ใช้ได้ต่อทันที!!!

*/
DROP TABLE `tmp_labcare`;
CREATE TABLE IF NOT EXISTS `tmp_labcare`(
	`code` VARCHAR(100) NOT NULL,
	`detail` VARCHAR(255) NOT NULL,
	`codelab` VARCHAR(100) NOT NULL,
	`codex` VARCHAR(100) NOT NULL,
	`TMLT` VARCHAR(100) NOT NULL,
	KEY `code` (`code`),
	KEY `codelab` (`codelab`)
);
INSERT INTO `tmp_labcare` 
SELECT TRIM(x.`code`) AS `code`,x.`detail`,x.`codelab`,x.`codex`,y.`TMLT` FROM (
	SELECT `code`,`detail`,`codelab`,`codex` FROM `labcare` WHERE `codelab` != '' AND `labstatus` = 'Y'GROUP BY `codelab` ORDER BY `codelab` ASC
) AS x 
LEFT JOIN `tmp_tmtlab` AS y ON x.`codex` = y.`LCCode`
GROUP BY x.`codelab`;



/*
diagnostic_report
*/
DROP TABLE IF EXISTS `tmp_orderhead`;
CREATE TABLE IF NOT EXISTS `tmp_orderhead`(
	`autonumber` INT(11) NOT NULL,
	`orderdate` VARCHAR(100) NOT NULL,
	`labnumber` VARCHAR(100) NOT NULL,
	`hn` VARCHAR(100) NOT NULL,
	`patienttype` VARCHAR(100) NOT NULL,
	`thdatehn` VARCHAR(100) NOT NULL,
    `an` VARCHAR(100) NOT NULL,
	KEY `labnumber` (`labnumber`),
	KEY `thdatehn` (`thdatehn`)
);
INSERT INTO `tmp_orderhead` 
SELECT x.`autonumber`,x.`orderdate`,x.`labnumber`,x.`hn`,x.`patienttype`,x.`thdatehn`,b.`an` FROM (
	SELECT a.`autonumber`,a.`orderdate`,a.`labnumber`,a.`hn`,a.`patienttype`,
	CONCAT(SUBSTRING(a.`orderdate`,9,2),'-',SUBSTRING(a.`orderdate`,6,2),'-',(SUBSTRING(a.`orderdate`,1,4)+543),a.`hn`) AS `thdatehn`,a.`room`
	FROM `orderhead` AS a 
	WHERE a.`hn` <> '' 
) AS x 
LEFT JOIN `tmp_ipcard` AS b ON b.`hn` = x.`hn` AND b.`bedcode` = x.`room`;


/*
diagnostic_report

!!! กำลังคิดอยู่ว่า จะเอา tmtcode มารวมไว้ใน resulthead ไปเลย จะได้ง่ายกับการดึงข้อมูล

!!! ตัวหลักของ resulthead ต้องเอา เพิ่มคีย์ให้กับ profilecode ด้วย

*/
DROP TABLE IF EXISTS `tmp_resulthead`;
CREATE TABLE IF NOT EXISTS `tmp_resulthead`(
	`autonumber` INT(11) NOT NULL,
	`labnumber` VARCHAR(100) NOT NULL,
    `hn` VARCHAR(100) NOT NULL,
	`orderdate` VARCHAR(100) NOT NULL,
	`profilecode` VARCHAR(100) NOT NULL,
	`tmlt` VARCHAR(100) NOT NULL,
	`detail` VARCHAR(255) NOT NULL,
	`thdatehn` VARCHAR(100) NOT NULL,
    `patienttype` VARCHAR(100) NOT NULL,
	KEY `labnumber` (`labnumber`),
	KEY `profilecode` (`profilecode`),
	KEY `tmlt` (`tmlt`),
	KEY `thdatehn` (`thdatehn`)
);
INSERT INTO `tmp_resulthead` 
SELECT m.`autonumber`,m.`labnumber`,m.`hn`,m.`orderdate`,m.`profilecode`,c.`TMLT`,c.`detail`,m.`thdatehn`,m.`patienttype`
FROM ( 
	SELECT a.`autonumber`,a.`labnumber`,a.`hn`,a.`orderdate`, 
	(CASE 
		WHEN b.`to` IS NOT NULL THEN b.`to`
		ELSE a.`profilecode`
	END ) AS `profilecode`,
	(CASE 
    WHEN a.`sourcecode` IN ('00','100','101','102','ER','HD') THEN 'OPD' 
    ELSE 'IPD' 
	END ) AS `patienttype`,
	CONCAT(SUBSTRING(a.`orderdate`,9,2),'-',SUBSTRING(a.`orderdate`,6,2),'-',(SUBSTRING(a.`orderdate`,1,4)+543),a.`hn`) AS `thdatehn`
	FROM (
		SELECT `autonumber`,`labnumber`,`hn`,`orderdate`,`profilecode`,`sourcecode` FROM `resulthead` WHERE `priority` <> ''
	) AS a 
	LEFT JOIN `map_labcare` AS b ON a.`profilecode` = b.`from`
) AS m 
LEFT JOIN `tmp_labcare` AS c ON m.`profilecode` = c.`codelab` ;


/*
observation
*/
DROP TABLE IF EXISTS `tmp_resultdetail`;
CREATE TABLE IF NOT EXISTS `tmp_resultdetail`(
	`autonumber` INT(11) NOT NULL,
    `labnumber` VARCHAR(100) NOT NULL,
	`orderdate` VARCHAR(100) NOT NULL,
	`profilecode` VARCHAR(100) NOT NULL,
	`tmlt` VARCHAR(100) NOT NULL,
	`thdatehn` VARCHAR(100) NOT NULL,
    `an` VARCHAR(100) NOT NULL,
	`labcode` VARCHAR(100) NOT NULL,
	`labname` VARCHAR(100) NOT NULL,
	`result` VARCHAR(100) NOT NULL,
	`unit` VARCHAR(100) NOT NULL,
	`authorisedate` VARCHAR(255) NOT NULL,
	KEY `labnumber` (`labnumber`),
	KEY `thdatehn` (`thdatehn`),
    KEY `an` (`an`)
);
INSERT INTO `tmp_resultdetail` 
SELECT x.*,y.`labcode`,y.`labname`,y.`result`,y.`unit`,y.`authorisedate`
FROM (

	SELECT a.`autonumber`,a.`labnumber`,a.`orderdate`,a.`profilecode`,a.`tmlt`,a.`thdatehn`,b.`an`
	FROM `tmp_resulthead` AS a 
	LEFT JOIN `tmp_orderhead` AS b ON a.`labnumber` = b.`labnumber` 
	WHERE b.`autonumber` IS NOT NULL

) AS x 
LEFT JOIN `resultdetail` AS y ON x.`autonumber` = y.`autonumber` 
WHERE y.`autonumber` IS NOT NULL AND ( y.`result` <> '' AND y.`result` NOT LIKE '%-%' );
